## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# CREATE SCHEMA `front_office` ;
spring.datasource.url = jdbc:mysql://localhost:3306/front_office?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username = root
spring.datasource.password = root@123


server.servlet.context-path=/front-office-service

server.port=8083
## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id=car-loan-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


LOAN_OFFICER_TOPIC=LoanOfficerTopic
RISK_OFFICER_TOPIC=RiskOfficerTopic
LOAN_OFFICER_RES_TOPIC=LoanOfficerResponseTopic
RISK_OFFICER_RES_TOPIC=RiskOfficerResponseTopic